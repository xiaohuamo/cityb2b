<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<meta name="format-detection" content="telephone=no">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover"/>
		<title>Homepage</title>
		<link rel="stylesheet" type="text/css" href="<{$SKIN_PATH}>common.css"/>
		<link rel="stylesheet" type="text/css" href="<{$SKIN_PATH}>css/orderGoods.css"/>
		<link rel="stylesheet" type="text/css" href="<{$SKIN_PATH}>css/placeOrder.css"/>
		<link rel="stylesheet" type="text/css" href="<{$SKIN_PATH}>css/datePop.css"/>
		<link rel="stylesheet" type="text/css" href="<{$SKIN_PATH}>css/cart.css"/>
		<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
		<script src="<{$SKIN_PATH}>/js/vue.min.js"></script>
		<script src="https://unpkg.com/vue-lazyload/vue-lazyload.js"></script> <script>
		  Vue.use(VueLazyload)
		  
		</script>
	</head>
	<body class="bgF2F2F2">
		<div id="order" v-cloak class="relative">
			<div v-show="scroll">
				<div class="head bgfff mb10 flexBox1">
				<div class="flexBox2">
					<img src="<{$SKIN_PATH}>img/return.png" class="return2" @click="returnPage"/>&nbsp;
					<div class="f38 col333 f500 bold" @click="datePop">11月15日星期二</div>
				</div>
				<div class="flexBox1">
					<img v-if="isSC" src="<{$SKIN_PATH}>img/sc.png" class="star shareIcon" @click="scPage"/>
					<img v-else src="<{$SKIN_PATH}>img/star2.png" class="star shareIcon" @click="scPage"/>
					<img src="<{$SKIN_PATH}>img/share.png" class="w40 shareIcon" @click="shareApp"/>
					<img src="<{$SKIN_PATH}>img/jia.png" class="w40" @click="clickAdd"/>
				</div>
				</div><div style="height:3.4rem;"></div>
				
				<img src="<{$SKIN_PATH}>img/shareMask.png" class="w100 shareMask" v-show="isShare" @click="dismissShare"/>
				<div class="add add2" id="add" v-show="isAddShow">
					<a href=""><div class="flexBox2">
						<img src="<{$SKIN_PATH}>img/add_1.png"/>
						<span class="colfff f30">EN</span>
					</div></a>
					<div @click="nextPage" class="flexBox2" style="border:none;">
						<img src="<{$SKIN_PATH}>img/dpsm.png"/>
						<span class="colfff f30">店铺说明</span>
					</div>
					<div class="triangle"></div>
				</div>
			</div>
			<!-- 主体部分开始 -->
			   <!-- 上面目录部分 -->
			<div class="pa15 classifyBox z7">
				  <!--只有一级分类的情况-->
				 
				<!-- <div class="flexBox6">
					<div class="bigclassify2">
						<div class="classify" @click="choseBigClassify(index)" v-for="(item,index) in classifBigyList2" :class="currentBigClassify==index?'colFD5001':''">{{item}}</div>
					</div>
					<div class="flexBox2">
						<img src="<{$SKIN_PATH}>img/fl.png" class="xxx" @click="classifyPop"/>&nbsp;&nbsp;
						<img src="<{$SKIN_PATH}>img/xxx.png" class="xxx" @click="layoutChange"/>
					</div>
				</div> -->
				
				<div class="searchhead" >
				 <!--	<div class="searchBox flexBox1" v-if="layout"  style=";    margin-bottom: 10px;"> -->
				<div class="searchBox flexBox1"   style=";    margin-bottom: 10px;">
						<img src="<{$SKIN_PATH}>img/search.png" class="searchIcon"/>
						<input v-model="searchCon" placeholder="请输入商家或产品" style="background: #fff;"  @input="search" @focus="getFocus" @blur="loseFocus"/>
					    <img v-if="searchCon!=''" src="<{$SKIN_PATH}>img/cha.png" class="cha" @click="remove"/>
					</div>
				</div>
			<!--	<div class="searchhead"  v-else> 
					<div class="searchBox flexBox1" style="margin-bottom: 10px;">
						<img src="<{$SKIN_PATH}>img/search.png" class="searchIcon"/>
						<input v-model="searchCon" placeholder="请输入商家或产品" style="background: #fff; " @input="search" @focus="getFocus" @blur="loseFocus"/>
					    <img v-if="searchCon!=''" src="<{$SKIN_PATH}>img/cha.png" class="cha" @click="remove"/>
					</div>
				</div> 	 -->
				 	
				 <!-- 一级分类 -->
				<div class="flexBox6">
					<div class="bigclassify">
						<div class="classify" @click="choseBigClassify(index,item.id)" v-for="(item,index) in classifBigyList" :class="currentBigClassify==index?'colFD5001':''">
						{{item.title_en}}
						</div>
					</div>
					<div class="flexBox2">
						<img src="<{$SKIN_PATH}>img/fl.png" class="xxx" @click="classifyPop"/>&nbsp;&nbsp;
						<img src="<{$SKIN_PATH}>img/xxx.png" class="xxx" @click="layoutChange"/>
					</div>
				</div>
				      <!-- 二级分类 -->
				<div class="flexBox6 maT15" v-show="scroll2">
					<div class="bigclassify">
						<div class="classify2 bold" @click="haveBuy">
							已购
							<img class="classify2Active" src="<{$SKIN_PATH}>img/tabActive.png" v-show="currentClassify==-1"/>  
						</div>
						<div class="classify2" v-for="(item,index) in classifyList2" @click="choseClassify(index,item.id)">
						    {{item.title_en}}
						    <img class="classify2Active" src="<{$SKIN_PATH}>img/tabActive.png" v-show="currentClassify==index"/>  
						</div>
					</div>
					<div class="flexBox2">
						<img src="<{$SKIN_PATH}>img/fl.png" class="xxx" @click="classifyPopSubCategory"/>
					</div>
				</div>	

				
			</div>
			<!-- 二级分类占位 -->
			<div style="height:55px;"></div>
			<!-- 只有一级分类占位 -->
			<!-- <div style="height:43px;"></div> -->
			<!-- 两级分类弹出框 -->
			
			<div class="classifyPop  bgfff flexBox2 wrap pa15" v-if="isclassifyPop">
				<div v-for="(item,index) in classifBigyList" class="w33 center pmb10" @click="clickdetailBig(item.id,index)">
					{{item.title_en}}
				</div>
			</div>

			<div class="classifyPop  bgfff flexBox2 wrap pa15" v-if="isclassifyPopSubCategory">
				<div v-for="(item,index) in classifyList2" class="w33 center pmb10" @click="clickdetailSub(item.id,index)">
					{{item.title_en}}
				</div>
			</div>



			
			<!-- 一级分类弹出框 -->
			
			<!-- <div class="classifyPop2 bgfff flexBox2 wrap pa15" v-if="isclassifyPop">
				<div v-for="item in classifyList2" class="w33 center pmb10" @click="clickdetail">{{item}}</div>
			</div> -->
			
			
			
			、
			<!-- 目录结束 -->
			<div class="ma15 bgfff borR7" style ="margin-top:50px;">
				
				
				<!-- 橫版判斷 -->
				<div :class="layout?'flexBox1 bgF2F2F2 wrap':''">
					<div :class="layout?'bgfff goodsbox':''" class="pa15 borderB" v-for="(item2,index2) in ProductList_filter"  v-bind:id="item2.parent_category_id"      >
						<div :class="layout?'':'flexBox3'">
							
							<div class="goodInfo2_" style="height:2.0rem;"  v-if="isDiffOfLastCateId(item2.parent_category_id ,(index2-1),'parent')">
								<div class="classify colFD5001 bold">{{item2.parent_cate_en_name}}</div>
								
								
							</div>	
							<div class="goodInfo2_" style="height:2.0rem;" v-bind:id="getsubid(index2)" v-if="isDiffOfLastCateId(getsubid(index2),(index2-1),'sub')">
								
								<div v-if="item2.sub_cate_en_name !='0'" class="classify colFD5001 bold">{{item2.parent_cate_en_name}}-{{item2.sub_cate_en_name}}</div>
							</div>		

						</div>
						<div :class="layout?'':'flexBox3'">
							<img v-lazy="item2.menu_pic"  :class="layout?'cartImg2':'cartImg'" @click="clickGoods" />
							<div class="goodInfo2_">
								<div >{{item2.title}}</div><div v-if="CheckChinese(this.searchCon)">{{item2.title_cn}}</div>
								<div class="flexBox1 price" v-if="item2.hasGG==0">
									<span class="colFD5001">${{item2.price}}</span>
									<div class="flexBox2">
										<div class="numreduce" @click.stop="numreduce(index2,'g',item2)"></div>
										<input type="number" v-model="item2.num" class="numInput" @change="Enter(item2.num,index2,item2)" @click="Enter(item2.num,index2,item2)"/>
										<div class="numadd" @click.stop="numadd(index2,'g',item2)"></div>
									</div>
								</div>
								<div class="flexBox1 price" v-else>
									<span class="colFD5001">${{item2.price}}</span>
									<div class="commonBtn" @click.stop="Specifications(item2)">
										选规格
									</div>
								</div>
							</div>		
							
						</div>
					<div class="pa15 borderB col9A9A9A" v-if="item2.menu_en_desc !=''">{{item2.menu_en_desc}}</div>		
				<div class="pa15 borderB col9A9A9A" v-if="(item2.menu_desc !='') && CheckChinese(this.searchCon) ">{{item2.menu_desc}}</div>		
					</div>
				</div>
			</div>

			<!-- 点击加载 -->
			<div class="col9A9A9A more flexBox4">
				<img src="<{$SKIN_PATH}>img/loading.png" class="loadingIcon"/>&nbsp;
			 	<span>正在加载中...</span>
			</div>
			
			<!-- 底部 -->
			<div style="height:3.125rem;"></div>
			<div class="flexBox1 menuBox z5">
				<div class="flexBox1">
					<div @click="gohome" style="margin-right:2.8rem;">
						<img src="<{$SKIN_PATH}>img/menu1.png"/>
						<span class="col333 f26">首页</span>
					</div>
					<div @click="cartPop" class="cartnumBox">
						<img src="<{$SKIN_PATH}>img/menu4.png" />
						<span class="col333 f26">购物车</span>
						<div v-show="goodsList.length>0">{{goodsList.length}}</div>
					</div>
				</div>
				<div class="flexBox1">
					<div class="colFD5001 bold">$<span class="f40">{{allTotal}}</span></div>&nbsp;&nbsp;&nbsp;&nbsp;
				    <div class="commonBtn" @click="placeOrder">下单</div>
				</div>
			</div>
			<!-- 规格弹出框 -->
			<div class="mask z10" v-if="isPop" @click="closePop('g')">
				<img src="<{$SKIN_PATH}>img/cha2.png" @click="closePop('g')" class="close2"/>
				<div class="pop2 center" @click.stop="clickPop">
					<div class="flexBox2 borderB pa15 relative">
						<img :src="guige1Info[0]" class="cartImg"/>
						<div class="goodInfo2 textLeft">
							<div class="bold">{{guige1Info[1]}}</div>
							<div class="flexBox1 price">
								<span class="colFD5001">{{guige1Info[3]}}</span>
							</div>
						</div>
					</div>
					<div class="pa0-15">
						<div class="f28 col333 textLeft bold pa15-0">{{guige1Info[4][4]}}</div>
						<div class="flexBox2 wrap">
							<div :class="current1==index?'checkedBtn detail_btn':'detail_btn'" v-for="(item,index) in guige1List" @click.stop="choseGuige(index,1)">{{item.menu_en_name}}</div>
						</div>
						<div class="flexBox1 maT15">
							<div class="f28">
						<span class="colFD5001" v-if="{selectedGuige1Item}">{{selectedGuige1Item['price']}}</span>
								<span class="colFD5001" v-else ></span>
								
								<span class="col666" style="text-decoration:line-through;"></span>
							</div>
							<div class="flexBox2">
								<div class="numreduce" @click.stop="guige1Numreduce"></div>
								<input type="number" v-model="num" class="numInput" @click.stop="guige1Enter(num)"/>
								<div class="numadd" @click.stop="guige1Numadd"></div>
							</div>
						</div>
						<div class="relative joinCartBtnBox">
							<div class="joinCartBtn f30" @click="guige1AddTOCart">加入购物车</div>
						</div>
					</div>
				</div>	
			</div>
			
			<!-- 购物车弹出框 -->
			
			<div class="mask z4" v-if="iscartPop" @click="closePop('c')">
				<div class="bgfff cartPop">
					<img src="<{$SKIN_PATH}>/img/cha2.png" @click="closePop('c')" class="close3"/>
					<div class="center col333 f30 pa15-0 borderB">共{{goodsList.length}}件</div>
					<div class="pa15 borderB relative" v-for="(item2,index2) in goodsList" >
						<div class="flexBox3"  :class="item2.isTouch?'touchStart':'touchStart2'" @touchStart='touchStart'  @touchend='touchEnd($event,index2)'>
							<img :src="item2.menu_pic" class="cartImg"  @click.stop="clickGoods"/>
							<div class="goodInfo2_">
								<div >{{item2.title}}</div><div v-if="item2.guigeId">{{item2.guigeDesc}}</div>
								<div class="flexBox1 price">
									<span class="colFD5001">{{item2.price}}</span>
									<div class="flexBox2">
										<div class="numreduce" @click.stop="numreduceCart(index2,'c')"></div>
										<input type="number" v-model="item2.num" class="numInput" @click.stop="EnterCart(item2.num,index2)" @change.stop="EnterCart(item2.num,index2)"/>
										<div class="numadd" @click.stop="numaddCart(index2,'c')"></div>
									</div>
								</div>
							</div>		
						</div>
						<div :class="item2.isTouch?'touchRemoveActive':'touchRemoveActive2'" class="touchRemove f25" @click.stop="clickRemove(index2,item2)">
							删除
						</div>
					</div>
				</div>
			</div>
			
			<!-- 配送日期弹框 -->
			
			<div class="mask z6" v-if="isDatePop" @click="closePop('d')">
				<div class="datePop">
					<img src="<{$SKIN_PATH}>img/cha2.png" @click="closePop('d')" class="delete"/>
					<div class="title col333 f30 bold">配送日程</div>
					<div class="flexBox1" style="flex-wrap:wrap;">
						<div class="dateBox2 relative" v-for="item in dateList">
							<div class="f30 col333">{{item.name}}</div>
							<div class="f25 colFD5203">{{item.status}}</div>
							<div class="f25 col999">{{item.date}}</div>
							<img src="<{$SKIN_PATH}>img/sj.png"/>
						</div>
					</div>
					<div class="title col333 f30 bold">下单时间及配送时间</div>
					<div class="flexBox1 pa15">
						<div class="journal">下单时间</div>
						<div class="journal">配送时间</div>
					</div>
					<div class="pa15 f28 col0B0B0B">
						<div class="flexBox1 pmb15">
							<span>周二零点-周日早五点</span>
							<span>周三</span>
						</div>
						<div class="flexBox1 pmb15">
							<span>周二零点-周日早五点</span>
							<span>周三</span>
						</div>
						<div class="flexBox1 pmb15">
							<span>周二零点-周日早五点</span>
							<span>周三</span>
						</div>
						<div class="flexBox1 pmb15">
							<span>周二零点-周日早五点</span>
							<span>周三</span>
						</div>
						<div class="flexBox1 pmb15">
							<span>周二零点-周日早五点</span>
							<span>周三</span>
						</div>
						<div class="flexBox1 pmb15">
							<span>周二零点-周日早五点</span>
							<span>周三</span>
						</div>
					</div>
					<div class="continue sure">确定</div>
				</div>
			</div>
			
		</div>
	</body>
	
<script>
		new Vue({
			el:"#order",
			data:{
				scroll:true,
				scroll2:true,
				currentBigClassify:0,
				currentClassify:0,
				current1:0, //规格1组当前选择索引
				cuurent1ItemId:0, //规格1组当前对应的goodlist2 产品id
				current2:0,

                //仅有主类商家的大类数据
				classifBigyList2:['已购','全部','火锅','火锅','蔬菜','水果','零食','吃的','喝的','用的','玩的'],

                //主类子类共有的大类数据
				classifBigyList:[
						{
						id:25685,
						title_cn:'全部',
						title_en:'all',
						sort:0,
						status:1     // 是否选中状态  1为选中  2是不选中
						},
						{
						id:24685,
						title_cn:'猪肉',
						title_en:'pork',
						sort:1,
						status:0     // 是否选中状态  1为选中  2是不选中
						}

                     ],


				// 子类数据 
				classifyList2:[
						

				],
				list1:['10cm','20cm','30cm','40cm'],
                guige1Info:[ //规格数据结构
				/*	
						'/data/upload/2021-10/20211008160210756411.jpg', // pic
						'pork',  //en_name
						'猪肉立即',  // cn_name
						'7.89',  // price 
					
	            */
				],
				guige1List:[ //规格细节

					/*	{
							id:'32222',
							price:'8.5',
							menu_cn_name:'5mm 肉条',
							menu_en_name:'5mm stripe',
							menu_desc:'bala bala bala 5mm',
						},
						{
							id:'322e22',
							price:'7.5',
							menu_cn_name:'10mm 肉条',
							menu_en_name:'10mm stripe',
							menu_desc:'10mmbala bala bala 5mm',
						},
						{
							id:'322e22',
							price:'9.5',
							menu_cn_name:'15mm 肉条',
							menu_en_name:'15mm stripe',
							menu_desc:'15mmbala bala bala 5mm',
						},
						{
							id:'322e22',
							price:'9.5',
							menu_cn_name:'15mm 肉条',
							menu_en_name:'15mm stripe',
							menu_desc:'15mmbala bala bala 5mm',
						},
						{
							id:'322e22',
							price:'9.5',
							menu_cn_name:'15mm 肉条',
							menu_en_name:'15mm stripe',
							menu_desc:'15mmbala bala bala 5mm',
						},
						{
							id:'322e22',
							price:'9.5',
							menu_cn_name:'15mm 肉条',
							menu_en_name:'15mm stripe',
							menu_desc:'15mmbala bala bala 5mm',
						} */

					],
				selectedGuige1Item:[], //选择规格1当前组
				num:1,   // 规格中的
				oldGoodsList2:[],
				goodsList2:[
					/*{
						title:'峰天山大金苗小米2斤/袋',
						price:6,
						num:2,
						isTouch:false,   // 是否显示删除按钮
						hasGG:false,
						status:0     // 是否选中状态  1为选中  2是不选中
					},
				
				
					{
						title:'色泽自然利隆赤峰天山大金苗小米2斤/袋',
						price:2,
						num:2,
						isTouch:false,
						hasGG:true,
						status:0
					} */
				],
				goodsList:[
					/*{
						title:'1色泽自然利隆赤峰天山大金苗小米2斤/袋',
						price:6,
						num:2,
						isTouch:false,   // 是否显示删除按钮
						hasGG:false,
						status:0     // 是否选中状态  1为选中  2是不选中
					},
					{
						title:'2色泽自然利隆赤峰天山大金苗小米2斤/袋',
						price:6,
						num:2222,
						isTouch:false,
						hasGG:false,
						status:0
					},
					{
						title:'色泽自然利隆赤峰天山大金苗小米2斤/袋',
						price:2,
						num:2,
						isTouch:false,
						hasGG:true,
						status:0
					} */
				],
				dateList:[
					{
						name:'明天',
						status:'已选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'已选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'可选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'可选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'可选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'不可选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'可选',
						date:'周三10:26'
					},
					{
						name:'明天',
						status:'可选',
						date:'周三10:26'
					}
				],
				searchCon:'',
				isPop:false,
				isDatePop:false,  // 日期弹出框
				isclassifyPop:false,   // 分类弹出框
				isclassifyPopSubCategory:false, //次级分类弹出框
				iscartPop:false,
				isAddShow:false,      // 点击＋ 
				isSC:false,           // 是否收藏
				isShare:false,
				sum:0,
				startX:0,
				endX:0,
				layout:false  ,   //  0是一排一個 1是一排兩個  	
				newitem:[],
				scrollOldPosition:0,
                ScrollDirection:'',
				scrollDownCount:0,
				scrollUpCount:0
			},
			mounted:function(){
			  
			},
			watch:{
				'goodsList.length': {
			        handler(newValue, oldValue) {
			           if(newValue==0){
			           	this.iscartPop=false
			           }
			        }
			    }
			},
			computed:{
				 allTotal() {
				 	var sum=0
				 	this.goodsList.map(
				 		(item)=>{
				 			sum+=item.price*item.num				 		}
				 	)
                    sum = sum.toFixed(2);
				 	return sum
				 },
				ProductList_filter() {
                let _this=this;
                let value =_this.searchCon;

               // alert(value);
                if(value) {
                  return    _this.goodsList2.filter(item=>{
                        if((item.title.toUpperCase().indexOf(value.toUpperCase())!= -1) || (item.title_cn.toUpperCase().indexOf(value.toUpperCase())!= -1)|| (item.menu_desc.toUpperCase().indexOf(value.toUpperCase())!= -1)){
                            return item
                        }
                    });
                     
				}else{
					return  _this.goodsList2;
				}
                  
              }
				 
			},
			mounted:function(){
				window.addEventListener('scroll', this.scrollToTop);
				 this.createcode();
			},
		    methods:{
			
		    	scrollToTop:function(){
		    		var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
  　　				if(scrollTop>207){
  					//	this.scroll=false
					//	this.scroll2=false	
  					}else{
  					//	this.scroll=true
					//	this.scroll2=true
  					}
					this.isclassifyPop=false;
					this.isclassifyPopSubCategory =false;

					if(this.scrollOldPosition){
                       if(this.scrollOldPosition>scrollTop){
                          this.ScrollDirection='up';
							this.scrollDownCount =0;
							this.scrollUpCount++;
						}else{
							this.ScrollDirection='down';
							this.scrollDownCount ++;
							this.scrollUpCount=0;

						}
                   }
                    if(this.scrollDownCount>3  && this.ScrollDirection=='down' && scrollTop>500){
							this.scroll=false
							this.scroll2=false	
					}else if(this.scrollUpCount>5){
							this.scroll=true
							this.scroll2=true
					}
                

                    console.log(this.ScrollDirection);
					this.scrollOldPosition =scrollTop;
		    	},scrollToId:function(id){
                    //alert(id);
		    		document.getElementById(id).scrollIntoView(true);
                    if(this.scroll){
						window.scrollBy(0, -200);
                    }else{
						window.scrollBy(0, -200);
                    }
				
					this.isclassifyPop=false
					this.isclassifyPopSubCategory =false
		    	},createcode:function(){
				  var self = this;
				 // alert('here');
				
				 axios.get('<{$http_root_www}>member1/get_cart?businessUserId=<{$businessUserId}>')
					  .then(function (response) {
					   self.goodsList = response.data;
  
					   console.log(self.goodsList);
					 })
					  .catch(function (error) {
						 console.log(error);
					  });
				// 获取商品列表
				axios.get('<{$http_root_www}>member1/get_good_list?id=319188')
					  .then(function (response) {
					   self.goodsList2 = response.data;
                       self.oldGoodsList2 =response.data;
					   console.log(self.oldGoodsList2);
					 })
					  .catch(function (error) {
						 console.log(error);
					  });
					
                 // 获取商品大类列表
				axios.get('<{$http_root_www}>member1/get_category_list?id=319188')
					  .then(function (response) {
					   self.classifBigyList = response.data;
					   console.log(self.classifBigyList);
					 })
					  .catch(function (error) {
						 console.log(error);
					  });
					
				
				 
				},
				CheckChinese:function(str1)
					{
                    let str =this.searchCon;
					if (escape(str).indexOf('%u') != -1)
					{return true;
					}
					else {return false;}
					},
				isDiffOfLastCateId:function(currentCateId,index2,type){
                    if(index2<0)	return 1;
					
                if(type=='parent'){
					if(this.goodsList2[index2].parent_category_id != currentCateId) 	return 1;
				}else{
                    if(!this.goodsList2[index2].sub_category_id) {
                       return 0;
                    }
					if( this.goodsList2[index2].sub_category_id != currentCateId) 	return 1;
					
				}
                   	
				
										
				return 0;
							  
						
				   	
                    
				},
				// 逐一将cart里面的购买单品数量赋值给good list ;
				synCartDataToList:function(tt){
                   // alert('here');
                   
				},
				getsubid:function(index) {
                   // alert(index);
                    if(!this.goodsList2[index].sub_category_id){
							return '0';
                   }else{
							return  this.goodsList2[index].sub_category_id;
                    }
					
				},
				scPage:function(){
				   	this.isSC=!this.isSC
				},
				shareApp:function(){
				  	this.isShare=true
				},
				dismissShare:function(){
					this.isShare=false
				},
				clickAdd:function(){
					this.isAddShow=!this.isAddShow
				},
				clickSC:function(){
					_self=this
					this.isSC=!this.isSC
					setTimeout(function(){
						_self.isAddShow=false
					},2000)
				},
				layoutChange:function(){
					this.layout=!this.layout
				},
				returnPage:function(){
					window.history.go(-1)
				},
				search:function(){
					//alert(this.searchCon);
                    this.ProductList_filter;
				},
				getFocus:function(){
					
				},
				loseFocus:function(){
					
				},
				remove:function(){
					this.searchCon=''
				}, // 规格弹窗数量增加1
				guige1Numadd:function() {
					this.num++;
				},guige1Numreduce:function() {
                    if(this.num>0) {
					this.num--;
					}
				},guige1AddTOCart:function(){ //规格产品添加购物车按钮动作
						this.isPop=false ;//关闭弹窗
						//this.num++;
						
						var arrlength =this.goodsList2.length;
					
						for (let i = 0; i < arrlength; i++) {
						   if( this.cuurent1ItemId ==this.goodsList2[i].id) { //如果当前选择规格的id 
							
							//this.goodsList2[i].num++; // 因为是规格，所以商品列表中的数量就不再更新，反正看不到。
							this.guiGeitemNumUpdateOnCart(this.goodsList2[i],'s'); //调用关于规格的增加，更新购物车里面的数量;
						   }
						} 

                      this.num =0;

				},


               // 为什么不直接使用index ，因为开启过滤功能之后，index和goodslist2里面的不符合，同时产品列表中可能有多个相同的产品（一个产品在不同的小类或大类中），需要同时同步更新。
				numadd:function(index2,source,item){   //  数量增加
					if(source=='g'){//  商品中的g  购物车中的c  规格中的s
                        

					var arrlength =this.goodsList2.length;
					
				    for (let i = 0; i < arrlength; i++) {
					   if(item.id ==this.goodsList2[i].id) {
					    
						this.goodsList2[i].num++;
						this.itemNumUpdateOnCart(this.goodsList2[i],'g');
					   }
					} 

						
					}else if(source=='c'){
						this.goodsList2[index2].num++
					}else{  // 规格中的
						this.num ++;
						//console.log(item);

					}
				console.log(this.goodsList);
				},numaddCart:function(index2,source){   //  数量增加
                  
					if(source=='g'){//  商品中的g  购物车中的c  规格中的s
						this.goodsList[index2].num++;
						
					}else if(source=='c'){
						this.goodsList[index2].num++;
						this.itemNumUpdateOnList(this.goodsList[index2],'c');
					}else{  // 规格中的
						this.num++
					}
				console.log(this.goodsList);
				},
				itemNumUpdateOnList:function(goodItem,source){
				 
				  // check if cart has the item already.
				  // add item to cart if not exist .\
				  
				  var indexOfiteminGoodslist = this.checkPositionofItemInList(goodItem,source);

				  if(indexOfiteminGoodslist >=0 ){
				    // 找到该产品，更新该数量为列表中的数量
					
					this.goodsList2[indexOfiteminGoodslist].num=goodItem.num;
				  }
				 
				  // update the database 
				  
				},guiGeitemNumUpdateOnCart:function(goodItem,source){ // gooditem为主产品信息

                     var indexOfiteminGoodslist = this.guigeCheckPositionofItemInCart(goodItem,source);

				  if(indexOfiteminGoodslist >=0 ){
				    // 找到该产品，更新该数量为列表中的数量
					
                    
                    // if the num equal 0 , then delete the item on the cart .
                    if(this.num ==0) {
                        this.clickRemove(indexOfiteminGoodslist);
                     }else{
						this.goodsList[indexOfiteminGoodslist].num=this.num;
					}
					
				  }else{
				   //alert('not find the item');
					this.guigeAdditemtocart(goodItem,source); // 没有发现，则添加一个产品到购物车列表
				  }
				 




				},
                // 更新购物车列表 （商品添加）
				itemNumUpdateOnCart:function(goodItem,source){
				
				  // check if cart has the item already.
				  // add item to cart if not exist .\
				  
				  var indexOfiteminGoodslist = this.checkPositionofItemInCart(goodItem,source);

				  if(indexOfiteminGoodslist >=0 ){
				    // 找到该产品，更新该数量为列表中的数量
					
                    
                    // if the num equal 0 , then delete the item on the cart .
                    if(goodItem.num ==0) {
                        this.clickRemove(indexOfiteminGoodslist);
                     }else{
						this.goodsList[indexOfiteminGoodslist].num=goodItem.num;
					}
					
				  }else{
				   //alert('not find the item');
					this.additemtocart(goodItem,source); // 没有发现，则添加一个产品到购物车列表
				  }
				 
				  // update the database 
				  
				},
				
				//check if item in the cart , will details whne do guige 
				checkPositionofItemInList(goodItem,source){ 
				    var arrlength =this.goodsList2.length;
					
				    for (let i = 0; i < arrlength; i++) {
					   if(goodItem.id ==this.goodsList2[i].id) {
					    
						return i; //返回找到的索引
					   }
					} 
					
					return -1; //没有发现
				},//检查规格中有没有相同的产品 ，产品号和规格号都相同；
				guigeCheckPositionofItemInCart(goodItem,source) {
                  var arrlength =this.goodsList.length;
					
				    for (let i = 0; i < arrlength; i++) {
                      // 如果产品编号和规格编号都相同
					   if(this.goodsList[i].id ==goodItem.id   && this.goodsList[i].guigeId ==this.selectedGuige1Item.id) {
					   
						return i; //返回找到的索引
					   }
					} 
					return -1; //没有发现



                },
				
				//check if item in the cart , will details whne do guige 
				checkPositionofItemInCart(goodItem,source){ 
				    var arrlength =this.goodsList.length;
					
				    for (let i = 0; i < arrlength; i++) {
					   if(goodItem.id ==this.goodsList[i].id) {
					   
						return i; //返回找到的索引
					   }
					} 
					return -1; //没有发现
				}, //添加一个无规格产品到购物车
				additemtocart:function(goodItem,source){
				  this.newitem=
					[ {
						title:goodItem.title,
						price:goodItem.price,
						num:goodItem.num,
						isTouch:false,   // 是否显示删除按钮
						hasGG:false,
						status:0,     // 是否选中状态  1为选中  2是不选中
						menu_pic:goodItem.menu_pic,
						id:goodItem.id,
						guigeId:0,
						guigeDesc:''
					}];					
					this.goodsList.push(this.newitem[0]);
				
				},//添加一个有规格产品到购物车
				guigeAdditemtocart:function(goodItem,source){
				  this.newitem=
					[ {
						title:goodItem.title,
						price:this.selectedGuige1Item.price,
						num:this.num,
						isTouch:false,   // 是否显示删除按钮
						hasGG:true,
						status:0,     // 是否选中状态  1为选中  2是不选中
						menu_pic:goodItem.menu_pic,
						id:goodItem.id,
						guigeId:this.selectedGuige1Item.id,
						guigeDesc:this.guige1Info[4][5] + ' ' + this.selectedGuige1Item.menu_en_name
					}];					
					this.goodsList.push(this.newitem[0]);
				
				},
				numreduce:function(index2,source,item){   // 数量减少
					if(source=='g'){//  商品中的
					   if(item.num <=0){
					   	return false
					   }else{

							var arrlength =this.goodsList2.length;
							
							for (let i = 0; i < arrlength; i++) {
							   if(item.id ==this.goodsList2[i].id) {
								
								this.goodsList2[i].num--;
								this.itemNumUpdateOnCart(this.goodsList2[i],'g');
							   }
							} 


					   	//this.goodsList2[index2].num--;
						//this.itemNumUpdateOnCart(this.goodsList2[index2],'g');
					   }
					}else if(source=='c'){
						if(this.goodsList[index2].num==1){
					   		return false
					   }else{
					   		this.goodsList[index2].num--
					   }
					}else{
						if(this.num==1){
							return false
						}else{
							this.num--
						}
					}	
				},
				numreduceCart:function(index2,source){   // 数量减少
					if(source=='g'){//  商品中的
					   if(this.goodsList2[index2].num <=0){
					   	return false
					   }else{
					   	this.goodsList2[index2].num--;
						
					   }
					}else if(source=='c'){
						if(this.goodsList[index2].num<=0){
					   		return false
					   }else{
					   		this.goodsList[index2].num--;
							this.itemNumUpdateOnList(this.goodsList[index2],'c');
                            if(this.goodsList[index2].num ==0) {
                                this.clickRemove(index2);
							}
					   }
					}else{
						if(this.num==1){
							return false
						}else{
							this.num--
						}
					}	
				},
				touchStart:function(e){ //滑动开始
				   // 记录初始位置
				   this.startX = e.touches[0].clientX;
				},
				touchEnd:function(e,index2){   //滑动删除
				  // 当前滑动的元素
				  let parentElement = e.currentTarget;
				  // 记录结束位置
				  this.endX = e.changedTouches[0].clientX;
				  // 左滑,计算滑动距离
				  if (this.startX - this.endX > 30) {
					   console.log('///////')
					   this.goodsList[index2].isTouch=true
					   
					   console.log(this.goodsList[index2].isTouch)
					   console.log(this.goodsList)
					   
				  }
				  // 右滑,计算滑动距离
				  if (this.startX - this.endX < -30) {
						this.goodsList[index2].isTouch=false	
				  }
				  this.startX = 0;
				  this.endX = 0;
				},
				clickRemove:function(index2,item){ // 点击删除
					this.goodsList.splice(index2,1);

					//循环查找产品列表中的对应menu id匹配，并清楚数量。
					var arrlength =this.goodsList2.length;
					
				    for (let i = 0; i < arrlength; i++) {
					   if(item.id ==this.goodsList2[i].id) {
					    
						this.goodsList2[i].num=0;
						
					   }
					} 
					
				},
				Enter:function(num,index2,item){
					if(num.length==1){
					  // this.goodsList[index2].num=this.goodsList[index2].num.replace(/[^1-9]/g,'')
					}else{
					  // this.goodsList[index2].num=this.goodsList[index2].num.replace(/\D/g,'')
					}
					// 修改购物车列表数量
				this.itemNumUpdateOnCart(item,'g');
				},guige1Enter:function(num){
					this.num =num;
				},
				EnterCart:function(num,index2){
					if(num.length==1){
					  // this.goodsList[index2].num=this.goodsList[index2].num.replace(/[^1-9]/g,'')
					}else{
					  // this.goodsList[index2].num=this.goodsList[index2].num.replace(/\D/g,'')
					}
					// 修改购物车列表数量
				this.itemNumUpdateOnList(this.goodsList[index2],'c');
				},
				Specifications:function(item){  // 点击规格
					//获得 该项目的实际产品
					this.guige1Info[0] =item['menu_pic'];
					this.guige1Info[1] =item['title'];
					this.guige1Info[2] =item['title_cn'];
					this.guige1Info[3] =item['price'];
					this.guige1Info[4] =item['guige_des1'];

                    //赋值 规格列表
					this.guige1List =item['menu_option_list'];

                    //初始化 规格 
                    this.choseGuige(0,1);
					//this.current1=0;
					//this.selectedGuige1Item=this.guige1List[0];
				//	console.log(this.selectedGuige1Item);
                 // 设置当前规格对应的goodlist2中的 产品id 
                    this.cuurent1ItemId =item.id;
					
					this.isPop=true;
				},
				choseGuige:function(index,source){  //选择规格
					if(source==1){ //选择第一层规格
						this.current1=index;
						this.selectedGuige1Item=this.guige1List[index];
                       
						// 获得当前选定的规格在购物车中的数量；
						this.num = 1;
						var arrlength =this.goodsList.length;
					    let find =0 ;
						for (let i = 0; i < arrlength; i++) {
						  // 如果产品编号和规格编号都相同
						   if(this.goodsList[i].id == this.cuurent1ItemId   && this.goodsList[i].guigeId ==this.selectedGuige1Item.id) {
						   this.num = this.goodsList[i].num;
							break;
						   }
						} 


                        
						//console.log(this.selectedGuige1Item);
					}else{
						this.current2=index
					}
				},
				closePop:function(source){  // 关闭弹窗
					if(source=='c'){  // 购物车
						this.iscartPop=false
					}else if(source=='d'){
						this.isDatePop=false
					}else{
						this.isPop=false
					}
				},
				cartPop:function(){  // 购物车弹出框
					this.iscartPop=!this.iscartPop
				},
				classifyPop:function(){  // 分类弹出框
					if(this.scroll){
						this.isclassifyPop=!this.isclassifyPop
					}else{
						return false
					}
				},
				classifyPopSubCategory:function(){  // 分类弹出框
					if(this.scroll){
						this.isclassifyPopSubCategory=!this.isclassifyPopSubCategory
					}else{
						return false
					}
				},
				haveBuy:function(){
					this.currentBigClassify=-1
					this.currentClassify=-1
					this.isclassifyPop=false
					this.isclassifyPopSubCategory=false
				},
				choseBigClassify:function(index,id){  //  选择一级分类
					this.searchCon ='';					
					this.currentBigClassify=index;
					this.scroll2=true;
					this.classifyList2=this.classifBigyList[index].subCategoryList;
					this.scrollToId(id);
					
                      
					//console.log(this.classifyList2);
					
				},
				choseClassify:function(index,id){  //  选择二级分类
					this.searchCon =''; 
					this.currentClassify=index;
					this.scrollToId(id);

					
				},
				clickdetailBig:function(id,index){
					this.searchCon ='';
					this.currentBigClassify=index;
					this.isclassifyPop=false
					this.isclassifyPopSubCategory =false
					this.scrollToId(id);
					
				},
				clickdetailSub:function(id,index){
					this.searchCon ='';
					this.currentClassify=index;
					this.isclassifyPop=false
					this.isclassifyPopSubCategory =false
					this.scrollToId(id);
					
				},
				placeOrder:function(){    // 下单
					window.location.href="<{$http_root_www}>member/showcart1?checkout=1"
				},
				nextPage:function(){  // 跳转店铺说明
					window.location.href="serviceDescription.htm"
				},
				gohome:function(){
					window.location.href="<{$http_root_www}>"
				},
				datePop:function(){
					this.isDatePop=true
				},
				clickPop(){
				  return false	
				},
				clickGoods(){
					window.location.href="<{$SKIN_PATH}>/goods/detail.htm"
				}
			}
		})	
		
		
	</script>
</html>
